name: publish release

on: 
  push: 
    branches: 
      - 'release/**'

jobs:
  react:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.package-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          token:  ${{ secrets.ACTIONS_GITHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'
      - run: echo GGGGGG ${{github.ref}}
      # - run: yarn install --frozen-lockfile
      # - id: package-version
      #   run: node scripts/extract-version.js
      # - name: setup git config
      #   run: |
      #     git config user.name "GitHub Actions Bot"
      #     git config user.email "<>"
      # - id: branch-name
      #   run: echo "::set-output name=name::release/${{ steps.package-version.outputs.version}}/${{inputs.name}}"
      # - name: create release
      #   run: |
      #     git checkout -b ${{ steps.branch-name.outputs.name }}
      #     npm version patch -m "bump version %s"
      #     yarn build
      #     git push origin ${{ steps.branch-name.outputs.name }} --tags
      # - run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - name: bump dev version
      #   #do not push the tag because there is no publish
      #   run: |
      #     git checkout main
      #     npm version minor -m "next release %s"
      #     git push origin main 

  # ng:
  #   runs-on: ubuntu-latest
  #   needs: react
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         repository: 'alissaVrk/ng-with-react'
  #         ref: 'master'
  #         token:  ${{ secrets.ACTIONS_GITHUB_TOKEN }}
  #     - name: setup git config
  #       run: |
  #         git config user.name "GitHub Actions Bot"
  #         git config user.email "<>"
  #     - name: create ng branch for release
  #       run: |
  #         git checkout -b feature/rt${{needs.react.outputs.version}}/${{inputs.name}}
  #         npm i alissa-todo-react-query@${{needs.react.outputs.version}}.x
  #         git commit -am "bump react version to ${{needs.react.outputs.version}}"
  #         git push origin feature/rt${{needs.react.outputs.version}}/${{inputs.name}}
  #     - run: echo ng branch created  feature/rt${{needs.react.outputs.version}}/${{inputs.name}}
  #     #here we could, in theory, deploy to jenkins the new feature branch

