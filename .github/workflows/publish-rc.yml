name: publish release

on: 
  push: 
    branches: 
      - 'release/**'

jobs:
  react:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract-name-parts.outputs.version }}
      branch-desc: ${{ steps.extract-name-parts.outputs.desc }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install --frozen-lockfile
      - id: extract-name-parts
        run: node scripts/extract-name-params.js
        env:
          branch: ${{ github.ref }} 
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: bump version
        run: |
          npm version patch -m "bump version %s"
          yarn build
          git push origin ${{ github.ref }} --tags
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: echo OPEN PR TO DEV (hopefully 1 PR open at a time)

  ng:
    runs-on: ubuntu-latest
    needs: react
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'alissaVrk/ng-with-react'
          ref: feature/rt${{ needs.react.outputs.version }}/${{ needs.react.outputs.desc }}
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: update ng react version
        run: |
          npm i alissa-todo-react-query
          git commit -am "bump react version"
          echo GGGG ${{ github.ref }}
          git push origin ${{ github.ref }}
      #here we could, in theory, deploy to jenkins the new feature branch

