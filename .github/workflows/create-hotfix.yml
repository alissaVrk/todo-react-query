name: create hotfix

on: 
  workflow_dispatch: 
    inputs: 
      name: 
        description: 'suffix for the branch names'
        required: true
        type: string

jobs:
  react:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.package-version.outputs.full_version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
          #TODO: create prod
          ref: 'prod'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install --frozen-lockfile
      - id: package-version
        run: node scripts/extract-version.js
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: create hotfix
        run: |
          git checkout -b release/${{ steps.package-version.outputs.full_version}}/${{inputs.name}}
          git push origin release/${{ steps.package-version.outputs.full_version}}/${{inputs.name}}

  ng:
    runs-on: ubuntu-latest
    needs: react
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'alissaVrk/ng-with-react'
          ref: 'master'
          token:  ${{ secrets.ACTIONS_GITHUB_TOKEN }}
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: create ng branch for hotfix
        run: |
          git checkout -b feature/rt${{needs.react.outputs.version}}/${{inputs.name}}
          npm i alissa-todo-react-query@${{needs.react.outputs.version}}
          git commit -am "bump react version to ${{needs.react.outputs.version}}"
          git push origin feature/rt${{needs.react.outputs.version}}/${{inputs.name}}
      - run: echo feature/rt${{needs.react.outputs.version}}/${{inputs.name}}
      #here we could, in theory, deploy to jenkins the new feature branch

